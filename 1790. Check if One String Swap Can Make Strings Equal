def areAlmostEqual(self, s1, s2):
        """
        :type s1: str
        :type s2: str
        :rtype: bool
        """
        # intialize the index to track mismatch
        i = -1
        j = -1
        # initialize the count of mismatch
        # if mismatch is 2 then only we can say , swapping is possible to make string same
        count = 0

        for k in range(len(s1)):
            # if char is not same, it means there is mismatch
            if s1[k] != s2[k]:
                count = count + 1
                if i == -1: # code to check first mismatch
                    i = k
                elif j == -1: # code to check second mismatch
                    j = k

        if count == 0: # if all are equal the return True
            return True
        elif count == 2 and s1[i] == s2[j] and s1[j] == s2[i]:
            # if count == 2 and first mismatch == second mistach and vice versa then True
            return True

        return False
