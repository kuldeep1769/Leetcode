def maxAscendingSum(self, nums):
        """
        :type nums: List[int]
        :rtype: int
        """
        if not nums:
           return 0

        max_sum = 0
        current_sum = nums[0]
    
        for i in range(1, len(nums)): # start from 1 to end to handle index out of bound
            if nums[i] > nums[i - 1]: # current number is greater than previous
                current_sum += nums[i]
            else:
                max_sum = max(max_sum, current_sum) # get the max_sum till now
                current_sum = nums[i] # current_sum will start from next element only instead of 0
        max_sum = max(max_sum, current_sum)  # compare the last subarray sum
    
        return max_sum
